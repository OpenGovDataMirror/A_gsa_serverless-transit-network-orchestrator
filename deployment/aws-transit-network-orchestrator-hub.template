AWSTemplateFormatVersion: 2010-09-09
Description: >-
  (SO0058) - The AWS CloudFormation template (Hub) for deployment of the
  serverless-transit-network-orchestrator Solution. Version v1.0.0
Parameters:
  Principals:
    Type: CommaDelimitedList
    Description: >-
      AWS account numbers eg. 123456789012 (comma seperated) OR the ARN of an
      Organization to share TGW with the principals eg.
      arn:aws:organizations::<ORG_MASTER_ACCOUNT_ID>:organization/o-exampleorgid.
  PrincipalType:
    Type: String
    Description: Either provide list of accounts (comma seperated) or AWS Organizations ARN
    Default: List of Accounts
    AllowedValues:
      - AWS Organization ARN
      - List of Accounts
  ApprovalNotification:
    Description: Do you want to send notification to the Network Admin for approval?
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
    Type: String
  ApprovalNotificationEmail:
    Type: String
    Description: Email for the network administrator(s)
  AuditTrailRetentionPeriod:
    Description: >-
      Specifies the number of days you want to retain audit history in Amazon
      DynamoDB
    Type: Number
    Default: 90
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
  AttachmentTag:
    Description: Custom tag key name to trigger the TGW VPC attachment workflow.
    Default: Attach-to-tgw
    Type: String
    MinLength: 0
    MaxLength: 20
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9-_]*$'
  AssociationTag:
    Description: >-
      Custom tag key name to trigger the TGW route table association with TGW
      attachment workflow.
    Default: Associate-with
    Type: String
    MinLength: 0
    MaxLength: 20
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9-_]*$'
  PropagationTag:
    Description: >-
      Custom tag key name to trigger the route propagation to TGW route table(s)
      workflow.
    Default: Propagate-to
    Type: String
    MinLength: 0
    MaxLength: 20
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9-_]*$'
  DefaultRoute:
    Description: >-
      Default/Static route(s) to Transit Gateway - spoke account route table
      associated with the tagged subnets.
    Default: All-Traffic (0/0)
    Type: String
    AllowedValues:
      - All-Traffic (0/0)
      - 'RFC-1918 (10/8, 172.16/12, 192.168/16)'
      - Configure-Manually
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Account Structure
        Parameters:
          - PrincipalType
          - Principals
      - Label:
          default: Notification Settings
        Parameters:
          - ApprovalNotification
          - ApprovalNotificationEmail
      - Label:
          default: User Settings
        Parameters:
          - ConsoleLoginInformationEmail
          - UserPoolUsernameForAdminUser
          - UserPoolUsernameForReadOnlyUser
      - Label:
          default: Network Settings
        Parameters:
          - DefaultRoute
      - Label:
          default: Tag Settings
        Parameters:
          - AttachmentTag
          - AssociationTag
          - PropagationTag
      - Label:
          default: Audit Trail Retention Settings
        Parameters:
          - AuditTrailRetentionPeriod
    ParameterLabels:
      Principals:
        default: Account List or AWS Organizations ARN
      PrincipalType:
        default: Principal Type
      ApprovalNotificationEmail:
        default: Approval Notification Email
      ApprovalNotification:
        default: Receive Approval Notifications
      ConsoleLoginInformationEmail:
        default: Console Login Information Email
      UserPoolUsernameForAdminUser:
        default: Admin Username
      UserPoolUsernameForReadOnlyUser:
        default: Read-Only Username
      DefaultRoute:
        default: Default Route to TGW
      AttachmentTag:
        default: Tag key for TGW Attachment
      AssociationTag:
        default: Tag key for TGW Route Table Association with TGW Attachment
      PropagationTag:
        default: Tag key for Route Propagation to TGW Route Table(s)
      AuditTrailRetentionPeriod:
        default: Audit Trail Retention Period
  'AWS::CloudFormation::Designer':
    162f9f52-45ca-4c4e-8407-8a0ed33ce1c7:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 330
      z: 1
      embeds: []
    605b3dcc-9dc9-4320-a7f6-0dc63f4fef3b:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 450
      z: 1
      embeds: []
    5048fc83-aaf9-4cc9-98d3-9eee87ee095f:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 210
      z: 1
      embeds: []
    1a932afe-f20c-47e3-bd27-35e60dec26ca:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 330
      z: 1
      embeds: []
    a4550f6e-30e7-4f2e-9c4d-ce32181dd9c1:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 450
      z: 1
      embeds: []
    639cbd7a-e17c-4335-862d-cbefe128ad22:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 570
      z: 1
      embeds: []
    9137c29f-255c-4f3d-9ea4-431fc12d4359:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 690
      z: 1
      embeds: []
    6137f1ca-2a56-4620-962c-c62448d60e3b:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 690
      z: 1
      embeds: []
    6ba80574-ec51-4c35-9da2-315e7472ff1c:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 690
      z: 1
      embeds: []
      isassociatedwith:
        - 9137c29f-255c-4f3d-9ea4-431fc12d4359
    ac87f886-1af0-4515-b29c-4f2e5a797519:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 690
      z: 1
      embeds: []
      isassociatedwith:
        - 9137c29f-255c-4f3d-9ea4-431fc12d4359
    de6edc7d-f8b3-45a7-9206-2b58b6b6259a:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 90
      z: 1
      embeds: []
    8062e9fc-4269-4833-bcab-b0438e742870:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 210
      z: 1
      embeds: []
    dc3656e8-1914-488e-b8c8-2a84fe84c29a:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 330
      z: 1
      embeds: []
    7eafa82e-2d5c-435e-ae99-56abd259a2ce:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 450
      z: 1
      embeds: []
    335cced5-9d35-4505-9a0c-18b02126c1c5:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 570
      z: 1
      embeds: []
    7c88429f-91bc-47c6-89cd-28d0b5be5a0e:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 690
      z: 1
      embeds: []
    572eb11c-fc9c-4f70-98ea-a6ae9606259f:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 810
      z: 1
      embeds: []
      dependson:
        - 7c88429f-91bc-47c6-89cd-28d0b5be5a0e
    4cfc3125-5875-402a-87cf-6515b4ecc0d4:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 810
      z: 1
      embeds: []
    696c9e1f-1d01-4a65-8262-fe9962a8b86e:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 810
      z: 1
      embeds: []
    3ba11391-18f6-4eea-9db0-7d9e3bfb56d4:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 810
      z: 1
      embeds: []
    12466927-805e-42f3-98b4-3bc840aecec1:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 810
      z: 1
      embeds: []
    d92c3e7a-4dce-4f85-88ee-757c18158bd0:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 810
      z: 1
      embeds: []
    2fea74a1-ad95-4d78-a028-5d7804aa6c6b:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 810
      z: 1
      embeds: []
    0ed13a31-b9b9-4ee8-ab18-a80116572bff:
      size:
        width: 60
        height: 60
      position:
        x: 900
        'y': 570
      z: 1
      embeds: []
      isassociatedwith:
        - d92c3e7a-4dce-4f85-88ee-757c18158bd0
    fdab1be8-2d60-4ec8-8c30-c94bb67fa003:
      size:
        width: 60
        height: 60
      position:
        x: 900
        'y': 690
      z: 1
      embeds: []
      isassociatedwith:
        - d92c3e7a-4dce-4f85-88ee-757c18158bd0
    5022a715-0df2-40a9-b942-e4111121c33a:
      size:
        width: 60
        height: 60
      position:
        x: 900
        'y': 810
      z: 1
      embeds: []
      isassociatedwith:
        - d92c3e7a-4dce-4f85-88ee-757c18158bd0
    e1b5af15-bcee-4ef3-bbea-8139fb289fa3:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 930
      z: 1
      embeds: []
Conditions:
  NotificationCondition: !Equals 
    - !Ref ApprovalNotification
    - 'Yes'
  IsMemberOfOrganization: !Equals 
    - !Ref PrincipalType
    - AWS Organization ARN
  IsNotMemberOfOrganization: !Equals 
    - !Ref PrincipalType
    - List of Accounts
Mappings:
  NetworkConfiguration:
    TransitGateway:
      AutoAcceptSharedAttachments: enable
      DefaultRouteTableAssociation: disable
      DefaultRouteTablePropagation: disable
      DnsSupport: enable
      VpnEcmpSupport: enable
    us-east-1:
      AmazonSideAsn: 64526
    us-east-2:
      AmazonSideAsn: 64527
    us-west-1:
      AmazonSideAsn: 64528
    us-west-2:
      AmazonSideAsn: 64529
    eu-west-1:
      AmazonSideAsn: 64530
    eu-west-2:
      AmazonSideAsn: 64531
    eu-west-3:
      AmazonSideAsn: 64532
    eu-central-1:
      AmazonSideAsn: 64533
    ca-central-1:
      AmazonSideAsn: 64534
    ap-northeast-1:
      AmazonSideAsn: 64535
    ap-northeast-2:
      AmazonSideAsn: 64536
    ap-south-1:
      AmazonSideAsn: 64537
    ap-southeast-1:
      AmazonSideAsn: 64538
    ap-southeast-2:
      AmazonSideAsn: 64539
    sa-east-1:
      AmazonSideAsn: 64540
  NotificationConfiguration:
    SNS:
      DisplayName: AWS Transit Network Change Approval Notification
      TopicName: AWS-Transit-Network-Approval-Notifications
  LambdaFunction:
    Logging:
      Level: info
  EventBridge:
    Bus:
      Name: STNO-EventBridge
  SourceCode:
    General:
      S3Bucket: solutions
      KeyPrefix: serverless-transit-network-orchestrator/v1.0.0
      Version: v1.0.0
    Variables:
      WaitTime: '10'
      AllTraffic: 0.0.0.0/0
      RFC1918Routes: '10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16'
      ApprovalTagKey: ApprovalRequired
      ApprovalTagValue: 'No'
  Solution:
    Metrics:
      SendAnonymousData: 'Yes'
Resources:
  CustomServiceLinkedRole:
    Type: 'AWS::IAM::ServiceLinkedRole'
    Properties:
      AWSServiceName: ram.amazonaws.com
      Description: Allows RAM to access Organizations on your behalf.
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7c88429f-91bc-47c6-89cd-28d0b5be5a0e
  AWSTransitGateway:
    Type: 'AWS::EC2::TransitGateway'
    DeletionPolicy: Retain
    Properties:
      AmazonSideAsn: !FindInMap 
        - NetworkConfiguration
        - !Ref 'AWS::Region'
        - AmazonSideAsn
      Description: >-
        This transit gateway was created by AWS Serverless Transit Network
        Orchestrator
      AutoAcceptSharedAttachments: !FindInMap 
        - NetworkConfiguration
        - TransitGateway
        - AutoAcceptSharedAttachments
      DefaultRouteTableAssociation: !FindInMap 
        - NetworkConfiguration
        - TransitGateway
        - DefaultRouteTableAssociation
      DefaultRouteTablePropagation: !FindInMap 
        - NetworkConfiguration
        - TransitGateway
        - DefaultRouteTablePropagation
      DnsSupport: !FindInMap 
        - NetworkConfiguration
        - TransitGateway
        - DnsSupport
      VpnEcmpSupport: !FindInMap 
        - NetworkConfiguration
        - TransitGateway
        - VpnEcmpSupport
      Tags:
        - Key: Name
          Value: STNO-TGW
        - Key: AWS Solutions
          Value: !Ref 'AWS::StackId'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: de6edc7d-f8b3-45a7-9206-2b58b6b6259a
  FlatTGWRouteTable:
    Type: 'AWS::EC2::TransitGatewayRouteTable'
    DeletionPolicy: Retain
    Properties:
      TransitGatewayId: !Ref AWSTransitGateway
      Tags:
        - Key: Name
          Value: Flat
        - Key: StackId
          Value: !Ref 'AWS::StackId'
        - Key: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagKey
          Value: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagValue
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 335cced5-9d35-4505-9a0c-18b02126c1c5
  OnPremTGWRouteTable:
    Type: 'AWS::EC2::TransitGatewayRouteTable'
    DeletionPolicy: Retain
    Properties:
      TransitGatewayId: !Ref AWSTransitGateway
      Tags:
        - Key: Name
          Value: On-premises
        - Key: StackId
          Value: !Ref 'AWS::StackId'
        - Key: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagKey
          Value: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagValue
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7eafa82e-2d5c-435e-ae99-56abd259a2ce
  IsolatedTGWRouteTable:
    Type: 'AWS::EC2::TransitGatewayRouteTable'
    DeletionPolicy: Retain
    Properties:
      TransitGatewayId: !Ref AWSTransitGateway
      Tags:
        - Key: Name
          Value: Isolated
        - Key: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagKey
          Value: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagValue
    Metadata:
      'AWS::CloudFormation::Designer':
        id: dc3656e8-1914-488e-b8c8-2a84fe84c29a
  InfrastructureTGWRouteTable:
    Type: 'AWS::EC2::TransitGatewayRouteTable'
    DeletionPolicy: Retain
    Properties:
      TransitGatewayId: !Ref AWSTransitGateway
      Tags:
        - Key: Name
          Value: Infrastructure
        - Key: StackId
          Value: !Ref 'AWS::StackId'
        - Key: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagKey
          Value: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagValue
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8062e9fc-4269-4833-bcab-b0438e742870
  TGWResourceShare:
    DependsOn:
      - CustomServiceLinkedRole
    Type: 'AWS::RAM::ResourceShare'
    Properties:
      Name: Transit Gateway Resource Share
      ResourceArns:
        - !Join 
          - ''
          - - 'arn:aws:ec2:'
            - !Ref 'AWS::Region'
            - ':'
            - !Ref 'AWS::AccountId'
            - ':transit-gateway/'
            - !Ref AWSTransitGateway
      Principals: !Ref Principals
      Tags:
        - Key: AWS Serverless Transit Network Orchestrator
          Value: !Ref 'AWS::StackId'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 572eb11c-fc9c-4f70-98ea-a6ae9606259f
  ApprovalTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: !FindInMap 
        - NotificationConfiguration
        - SNS
        - DisplayName
      TopicName: !FindInMap 
        - NotificationConfiguration
        - SNS
        - TopicName
      KmsMasterKeyId: alias/aws/sns
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9137c29f-255c-4f3d-9ea4-431fc12d4359
  NetworkAdminEmailNotification:
    Condition: NotificationCondition
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref ApprovalNotificationEmail
      Protocol: email
      TopicArn: !Ref ApprovalTopic
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ac87f886-1af0-4515-b29c-4f2e5a797519
  SNSNotificationPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F18
            reason: Condition restricts permissions to current account.
      'AWS::CloudFormation::Designer':
        id: 6ba80574-ec51-4c35-9da2-315e7472ff1c
    Properties:
      Topics:
        - !Ref ApprovalTopic
      PolicyDocument:
        Statement:
          - Sid: __default_statement_ID
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'SNS:GetTopicAttributes'
              - 'SNS:SetTopicAttributes'
              - 'SNS:AddPermission'
              - 'SNS:RemovePermission'
              - 'SNS:DeleteTopic'
              - 'SNS:Subscribe'
              - 'SNS:ListSubscriptionsByTopic'
              - 'SNS:Publish'
              - 'SNS:Receive'
            Resource: !Ref ApprovalTopic
            Condition:
              StringEquals:
                'AWS:SourceOwner': !Sub '${AWS::AccountId}'
          - Sid: TrustCWEToPublishEventsToMyTopic
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            Resource: !Ref ApprovalTopic
  LambdaEventRuleOrganization:
    Type: 'AWS::Events::Rule'
    Condition: IsMemberOfOrganization
    Properties:
      Description: >-
        Serverless Transit Network Orchestrator - Rule for tag on resource
        events in Organization
      EventBusName: !Ref STNOCustomEventBus
      EventPattern:
        source:
          - aws.tag
        detail-type:
          - Tag Change on Resource
        detail:
          service:
            - ec2
          resource-type:
            - subnet
            - vpc
          changed-tag-keys:
            - Ref: AttachmentTag
            - Ref: AssociationTag
            - Ref: PropagationTag
      State: ENABLED
      Targets:
        - Arn: !Sub '${CustomResourceLambda.Arn}'
          Id: Custom-Resource-Lambda-Function
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 639cbd7a-e17c-4335-862d-cbefe128ad22
  LambdaEventRuleSpokeAccounts:
    Type: 'AWS::Events::Rule'
    Condition: IsNotMemberOfOrganization
    Properties:
      Description: >-
        Serverless Transit Network Orchestrator - Rule for tag on resource
        events from the spoke accounts
      EventBusName: !Ref STNOCustomEventBus
      EventPattern:
        account: !Ref Principals
        source:
          - aws.tag
        detail-type:
          - Tag Change on Resource
        detail:
          service:
            - ec2
          resource-type:
            - subnet
            - vpc
          changed-tag-keys:
            - Ref: AttachmentTag
            - Ref: AssociationTag
            - Ref: PropagationTag
      State: ENABLED
      Targets:
        - Arn: !Sub '${CustomResourceLambda.Arn}'
          Id: Custom-Resource-Lambda-Function
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a4550f6e-30e7-4f2e-9c4d-ce32181dd9c1
  LambdaEventRuleHubAccount:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: >-
        Serverless Transit Network Orchestrator - Rule for tag on resource
        events from hub account
      EventPattern:
        account:
          - !Ref 'AWS::AccountId'
        source:
          - aws.tag
        detail-type:
          - Tag Change on Resource
        detail:
          service:
            - ec2
          resource-type:
            - subnet
            - vpc
          changed-tag-keys:
            - Ref: AttachmentTag
            - Ref: AssociationTag
            - Ref: PropagationTag
      State: ENABLED
      Targets:
        - Arn: !Sub '${CustomResourceLambda.Arn}'
          Id: Custom-Resource-Lambda-Function
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1a932afe-f20c-47e3-bd27-35e60dec26ca
  STNOCustomEventBus:
    Type: 'AWS::Events::EventBus'
    Properties:
      Name: !FindInMap 
        - EventBridge
        - Bus
        - Name
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5048fc83-aaf9-4cc9-98d3-9eee87ee095f
  EventBusPermission:
    Type: 'Custom::CWEventPermissions'
    Properties:
      Principals: !Ref Principals
      EventBusName: !Ref STNOCustomEventBus
      ServiceToken: !GetAtt CustomResourceLambda.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e1b5af15-bcee-4ef3-bbea-8139fb289fa3
  CustomResourceLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Environment:
        Variables:
          LOG_LEVEL: !FindInMap 
            - LambdaFunction
            - Logging
            - Level
          STATE_MACHINE_ARN: !Ref OrchestratorStateMachine
          METRICS_FLAG: !FindInMap 
            - Solution
            - Metrics
            - SendAnonymousData
      Code:
        S3Bucket: !Join 
          - '-'
          - - !FindInMap 
              - SourceCode
              - General
              - S3Bucket
            - Ref: 'AWS::Region'
        S3Key: !Join 
          - /
          - - !FindInMap 
              - SourceCode
              - General
              - KeyPrefix
            - aws-transit-network-orchestrator-cr.zip
      FunctionName: TransitNetworkOrchestratorCRLambda
      Description: AWS Serverless Transit Network Orchestrator Custom Resource
      Handler: lambda_custom_resource.lambda_handler
      MemorySize: 1536
      Role: !GetAtt CustomResourceLambdaRole.Arn
      Runtime: python3.7
      Timeout: 900
      TracingConfig:
        Mode: PassThrough
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d92c3e7a-4dce-4f85-88ee-757c18158bd0
  LambdaPermissionOrganization:
    Type: 'AWS::Lambda::Permission'
    Condition: IsMemberOfOrganization
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LambdaEventRuleOrganization.Arn
      FunctionName: !Ref CustomResourceLambda
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5022a715-0df2-40a9-b942-e4111121c33a
  LambdaPermissionSpokeAccount:
    Type: 'AWS::Lambda::Permission'
    Condition: IsNotMemberOfOrganization
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LambdaEventRuleSpokeAccounts.Arn
      FunctionName: !Ref CustomResourceLambda
    Metadata:
      'AWS::CloudFormation::Designer':
        id: fdab1be8-2d60-4ec8-8c30-c94bb67fa003
  LambdaPermissionHubAccount:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LambdaEventRuleHubAccount.Arn
      FunctionName: !Ref CustomResourceLambda
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0ed13a31-b9b9-4ee8-ab18-a80116572bff
  CustomResourceLambdaRole:
    Type: 'AWS::IAM::Role'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >-
              Allow * in the ARN of the execution role to allow access to user
              created resource - IAM Service Message: The actions in your policy
              do not support resource-level permissions and require you to
              choose All resources
      'AWS::CloudFormation::Designer':
        id: 12466927-805e-42f3-98b4-3bc840aecec1
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: TransitNetworkOrchestratorCRLambdaRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - iam:GetRole
                Resource: !Sub arn:aws:iam::${AWS::Region}:role/*
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:DeleteParameter
                  - ssm:GetParametersByPath
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
              - Effect: Allow
                Action:
                  - ssm:DescribeParameters
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                Resource: !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                Resource: !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}::vpc/*
              - Effect: Allow
                Action:
                  - events:DescribeEventBus
                  - events:RemovePermission
                  - events:PutPermission
                Resource: !GetAtt STNOCustomEventBus.Arn
              - Effect: Allow
                Action:
                  - states:DescribeStateMachine
                  - states:DescribeStateMachineForExecution
                  - states:DescribeExecution
                  - states:ListExecutions
                  - states:StartExecution
                  - states:StopExecution
                Resource:
                  - !Ref OrchestratorStateMachine
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectTagging"
                  - "s3:ListBucket"
                  - "s3:GetObjectAcl"
                Resource:
                  - !Join ["", ["arn:aws:s3:::",!FindInMap ["SourceCode", "General", "S3Bucket"], "-", Ref: "AWS::Region"]]
                  - !Join ["", ["arn:aws:s3:::", !FindInMap ["SourceCode", "General", "S3Bucket"], "-", Ref: "AWS::Region","/*"]]
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:TransitNetworkOrchestratorCRLambda
                Action:
                  - lambda:InvokeFunction
  DynamoDbTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: SubnetId
          AttributeType: S
        - AttributeName: Version
          AttributeType: S
      KeySchema:
        - AttributeName: SubnetId
          KeyType: HASH
        - AttributeName: Version
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: TimeToLive
        Enabled: true
      BillingMode: PAY_PER_REQUEST
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 162f9f52-45ca-4c4e-8407-8a0ed33ce1c7
  StateMachineLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Environment:
        Variables:
          LOG_LEVEL: !FindInMap 
            - LambdaFunction
            - Logging
            - Level
          APPROVAL_NOTIFICATION: !Ref ApprovalNotification
          APPROVAL_NOTIFICATION_ARN: !Ref ApprovalTopic
          TGW_ID: !Ref AWSTransitGateway
          TABLE_NAME: !Ref DynamoDbTable
          ASSOCIATION_TAG: !Ref AssociationTag
          PROPAGATION_TAG: !Ref PropagationTag
          ATTACHMENT_TAG: !Ref AttachmentTag
          DEFAULT_ROUTE: !Ref DefaultRoute
          ALL_TRAFFIC: !FindInMap 
            - SourceCode
            - Variables
            - AllTraffic
          RFC_1918_ROUTES: !FindInMap 
            - SourceCode
            - Variables
            - RFC1918Routes
          WAIT_TIME: !FindInMap 
            - SourceCode
            - Variables
            - WaitTime
          TTL: !Ref AuditTrailRetentionPeriod
          APPROVAL_KEY: !FindInMap 
            - SourceCode
            - Variables
            - ApprovalTagKey
          FIRST_PRINCIPAL: !Select 
            - 0
            - !Ref Principals
          RESOURCE_SHARE_ARN: !GetAtt TGWResourceShare.Arn
          METRICS_FLAG: !FindInMap 
            - Solution
            - Metrics
            - SendAnonymousData
          SOLUTION_VERSION: v1.0.0
          STNO_CONSOLE_LINK: 'https://DELETE-ME-MAYBE'
      Code:
        S3Bucket: !Join 
          - '-'
          - - !FindInMap 
              - SourceCode
              - General
              - S3Bucket
            - Ref: 'AWS::Region'
        S3Key: !Join 
          - /
          - - !FindInMap 
              - SourceCode
              - General
              - KeyPrefix
            - aws-transit-network-orchestrator-sm.zip
      FunctionName: TransitNetworkOrchestratorSMLambda
      Description: AWS Serverless Transit Network Orchestrator State Machine Handler
      Handler: state_machine_router.lambda_handler
      MemorySize: 1536
      Role: !GetAtt StateMachineLambdaRole.Arn
      Runtime: python3.7
      Timeout: 900
      TracingConfig:
        Mode: PassThrough
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4cfc3125-5875-402a-87cf-6515b4ecc0d4
  StateMachineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub 'states.${AWS::Region}.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: lambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource: !GetAtt StateMachineLambda.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 696c9e1f-1d01-4a65-8262-fe9962a8b86e
  StateMachineLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Allow * because it is required for making Describe calls as they don't support resource-level permissions and require you to choose All resources."
          - id: W28
            reason: "The role name 'TransitNetworkOrchestratorSMLambda' has to be defined to allow cross account access from the hub account to make network changes."
    Properties:
      RoleName: !Join ["-", ["TransitNetworkOrchestratorSMLambdaRole", Ref: "AWS::Region"]]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: TransitNetworkOrchestratorSMLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - iam:GetRole
                Resource: !Sub arn:aws:iam::${AWS::Region}:role/*
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:DeleteParameter
                  - ssm:GetParametersByPath
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
              - Effect: Allow
                Action:
                  - ssm:DescribeParameters
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:CreateTransitGatewayRoute
                  - ec2:DeleteTransitGatewayRoute
                  - ec2:ModifyTransitGatewayVpcAttachment
                  - ec2:CreateTransitGatewayVpcAttachment
                  - ec2:DeleteTransitGatewayVpcAttachment
                  - ec2:AssociateTransitGatewayRouteTable
                  - ec2:DisableTransitGatewayRouteTablePropagation
                  - ec2:DisassociateTransitGatewayRouteTable
                  - ec2:EnableTransitGatewayRouteTablePropagation
                Resource: # use * for account id as the owner of the resource is spoke account
                  - !Sub arn:aws:ec2:${AWS::Region}:*:transit-gateway-route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:*:transit-gateway-attachment/*
                  - !Sub arn:aws:ec2:${AWS::Region}:*:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:*:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:*:route-table/*
              - Effect: Allow
                Action:
                  - ec2:DescribeTransitGatewayVpcAttachments
                  - ec2:DescribeTransitGatewayAttachments
                  - ec2:DescribeTransitGatewayRouteTables
                  - ec2:GetTransitGatewayAttachmentPropagations
                  - ec2:GetTransitGatewayRouteTableAssociations
                  - ec2:GetTransitGatewayRouteTablePropagations
                  - ec2:SearchTransitGatewayRoutes
                Resource: "*"
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Join ["-", ["arn:aws:iam::*:role/TransitNetworkExecutionRole", Ref: "AWS::Region"]]
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:TransitNetworkOrchestratorSMLambda
                Action:
                  - lambda:InvokeFunction
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !GetAtt DynamoDbTable.Arn
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref ApprovalTopic

  OrchestratorStateMachine:
    Type: 'AWS::StepFunctions::StateMachine'
    Properties:
      StateMachineName: TransitNetworkOrchestratorStateMachine
      RoleArn: !GetAtt StateMachineRole.Arn
      DefinitionString:
        'Fn::Sub': |-
          {
            "Comment": "A state machine that orchestrates transit network changes.",
            "StartAt": "Describe Resources Pass",
            "States": {
              "Describe Resources Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "VPC",
                  "FunctionName": "describe_resources"
                },
                "ResultPath": "$.params",
                "Next": "Describe Resources"
              },
              "Describe Resources": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Describe Transit Gateway VPC Attachments Pass"
              },
              "Describe Transit Gateway VPC Attachments Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "describe_transit_gateway_vpc_attachments"
                },
                "ResultPath": "$.params",
                "Next": "Describe Transit Gateway VPC Attachments"
              },
              "Describe Transit Gateway VPC Attachments": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Describe TGW Route Tables Pass"
              },
              "Describe TGW Route Tables Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "describe_transit_gateway_route_tables"
                },
                "ResultPath": "$.params",
                "Next": "Describe TGW Route Tables"
              },
              "Describe TGW Route Tables": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Requires Approval?"
              },
              "Requires Approval?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "And": [
                      {
                        "Variable": "$.ApprovalRequired",
                        "StringEquals": "yes"
                      },
                      {
                        "Not": {
                          "Variable": "$.AdminAction",
                          "StringEquals": "accept"
                        }
                      }
                    ],
                    "Next": "Yes"
                  }
                ],
                "Default": "No"
              },
              "Yes": {
                "Type": "Pass",
                "ResultPath": "$.params",
                "Next": "Send Approval Notification Pass"
              },
              "Send Approval Notification Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "ApprovalNotification",
                  "FunctionName": "notify"
                },
                "ResultPath": "$.params",
                "Next": "Send Approval Notification"
              },
              "Send Approval Notification": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Update DynamoDB Pass"
              },
              "No": {
                "Type": "Pass",
                "ResultPath": "$.params",
                "Next": "Event Source?"
              },
              "Event Source?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.TagEventSource",
                    "StringEquals": "subnet",
                    "Next": "Resource Share Invitation Pass"
                  }
                ],
                "Default": "VPC Tagged?"
              },
              "Resource Share Invitation Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "ResourceAccessManager",
                  "FunctionName": "accept_resource_share_invitation"
                },
                "ResultPath": "$.params",
                "Next": "Resource Share Invitation"
              },
              "Resource Share Invitation": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Get Transit Gateway VPC Attachment State Pass"
              },
              "Get Transit Gateway VPC Attachment State Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "describe_transit_gateway_vpc_attachments"
                },
                "ResultPath": "$.params",
                "Next": "Get Transit Gateway VPC Attachment State"
              },
              "Get Transit Gateway VPC Attachment State": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "TGW Attachment Change In Progress?"
              },
              "TGW Attachment Change In Progress?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Or": [
                      {
                        "Variable": "$.AttachmentState",
                        "StringEquals": "modifying"
                      },
                      {
                        "Variable": "$.AttachmentState",
                        "StringEquals": "pending"
                      }
                    ],
                    "Next": "Wait for TGW Attachment Change To Finish"
                  }
                ],
                "Default": "TGW Attachment CRUD Operations Pass"
              },
              "Wait for TGW Attachment Change To Finish": {
                "Type": "Wait",
                "Seconds": 15,
                "Next": "Get Transit Gateway VPC Attachment State"
              },
              "TGW Attachment CRUD Operations Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "tgw_attachment_crud_operations"
                },
                "ResultPath": "$.params",
                "Next": "TGW Attachment CRUD Operations"
              },
              "TGW Attachment CRUD Operations": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "CRUD Operation Completed?"
              },
              "CRUD Operation Completed?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.AttachmentState",
                    "StringEquals": "rejected",
                    "Next": "Update DynamoDB Pass"
                  },
                  {
                    "Variable": "$.AttachmentState",
                    "StringEquals": "failed",
                    "Next": "Update DynamoDB Pass"
                  },
                  {
                    "Variable": "$.AttachmentState",
                    "StringEquals": "deleted",
                    "Next": "Route CRUD Operations Pass"
                  },
                  {
                    "Variable": "$.AttachmentState",
                    "StringEquals": "available",
                    "Next": "Route CRUD Operations Pass"
                  }
                ],
                "Default": "Wait for CRUD operation to finish"
              },
              "Wait for CRUD operation to finish": {
                "Type": "Wait",
                "Seconds": 15,
                "Next": "Get TGW Attachment State Pass"
              },
              "Get TGW Attachment State Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "get_transit_gateway_vpc_attachment_state"
                },
                "ResultPath": "$.params",
                "Next": "Get TGW Attachment State"
              },
              "Get TGW Attachment State": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "CRUD Operation Completed?"
              },
              "VPC Tagged?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "And": [
                      {
                        "Variable": "$.VpcTagFound",
                        "StringEquals": "yes"
                      },
                      {
                        "Variable": "$.TgwAttachmentExist",
                        "StringEquals": "yes"
                      }
                    ],
                    "Next": "Association Changed?"
                  }
                ],
                "Default": "Update DynamoDB Pass"
              },
              "Association Changed?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.UpdateAssociationRouteTableId",
                    "StringEquals": "yes",
                    "Next": "Existing Association?"
                  }
                ],
                "Default": "Get TGW Attachment Propagations Pass"
              },
              "Existing Association?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Not": {
                      "Variable": "$.ExistingAssociationRouteTableId",
                      "StringEquals": "none"
                    },
                    "Next": "Disassociate TGW Route Table Pass"
                  }
                ],
                "Default": "Associate TGW Route Table Pass"
              },
              "Disassociate TGW Route Table Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "disassociate_transit_gateway_route_table"
                },
                "ResultPath": "$.params",
                "Next": "Disassociate TGW Route Table"
              },
              "Disassociate TGW Route Table": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Associate TGW Route Table Pass"
              },
              "Associate TGW Route Table Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "associate_transit_gateway_route_table"
                },
                "ResultPath": "$.params",
                "Next": "Associate TGW Route Table"
              },
              "Associate TGW Route Table": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Get TGW Attachment Propagations Pass"
              },
              "Get TGW Attachment Propagations Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "get_transit_gateway_attachment_propagations"
                },
                "ResultPath": "$.params",
                "Next": "Get TGW Attachment Propagations"
              },
              "Get TGW Attachment Propagations": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Enable TGW Attachment Propagations Pass"
              },
              "Enable TGW Attachment Propagations Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "enable_transit_gateway_route_table_propagation"
                },
                "ResultPath": "$.params",
                "Next": "Enable TGW Attachment Propagations"
              },
              "Enable TGW Attachment Propagations": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Disable TGW Attachment Propagations Pass"
              },
              "Disable TGW Attachment Propagations Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "TransitGateway",
                  "FunctionName": "disable_transit_gateway_route_table_propagation"
                },
                "ResultPath": "$.params",
                "Next": "Disable TGW Attachment Propagations"
              },
              "Disable TGW Attachment Propagations": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "Update DynamoDB Pass"
              },
              "Route CRUD Operations Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "VPC",
                  "FunctionName": "default_route_crud_operations"
                },
                "ResultPath": "$.params",
                "Next": "Route CRUD Operations"
              },
              "Route CRUD Operations": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "Next": "VPC Tagged?"
              },
              "Update DynamoDB Pass": {
                "Type": "Pass",
                "Result": {
                  "ClassName": "DynamoDb",
                  "FunctionName": "put_item"
                },
                "ResultPath": "$.params",
                "Next": "Update DynamoDB"
              },
              "Update DynamoDB": {
                "Type": "Task",
                "Resource": "${StateMachineLambda.Arn}",
                "End": true
              }
            }
          }
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3ba11391-18f6-4eea-9db0-7d9e3bfb56d4
  AppSyncSTNODynamoDBPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: >-
        Managed policy to allow AWS AppSync to access the tables created by this
        template.
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'dynamodb:UpdateItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
            Resource: !GetAtt DynamoDbTable.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 605b3dcc-9dc9-4320-a7f6-0dc63f4fef3b
  SendCFNParameters:
    Type: 'Custom::SendCFNParameters'
    Properties:
      PrincipalType: !Ref PrincipalType
      ApprovalNotification: !Ref ApprovalNotification
      AuditTrailRetentionPeriod: !Ref AuditTrailRetentionPeriod
      DefaultRoute: !Ref DefaultRoute
      MetricsFlag: !FindInMap 
        - Solution
        - Metrics
        - SendAnonymousData
      SolutionVersion: v1.0.0
      ServiceToken: !GetAtt CustomResourceLambda.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2fea74a1-ad95-4d78-a028-5d7804aa6c6b
Outputs:
  SLRId:
    Value: !Ref CustomServiceLinkedRole
  TGWId:
    Value: !Ref AWSTransitGateway
  FlatTGWRT:
    Value: !Ref FlatTGWRouteTable
  IsolatedTGWRT:
    Value: !Ref IsolatedTGWRouteTable
  OnpremTGWRT:
    Value: !Ref OnPremTGWRouteTable
  InfrastructureTGWRT:
    Value: !Ref InfrastructureTGWRouteTable
  ResourceShareArn:
    Value: !GetAtt TGWResourceShare.Arn
  SolutionVersion:
    Description: Version Number
    Value: v1.0.0
  DynamoDBTable:
    Description: The name of the Amazon DynamoDB table containing data of network requests
    Value: !Ref DynamoDbTable
 
